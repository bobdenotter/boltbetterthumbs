<!doctype html>
<html lang="{{ htmllang() }}">
<head>
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>BetterThumbs Documentation</title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="/extensions/vendor/cdowdy/betterthumbs/css/docs.css">


</head>
<body>
<header class="ext-docs-masthead ext-docs-header-container ">
    <div class="ext-docs-header-title">
        <h1><a href="{{paths.bolt}}">Bolt Admin</a></h1>
    </div>
    <div class="ext-docs-header-title">
        <h2>BetterThumbs Docs</h2>
    </div>
</header>

<main class="ext-docs-grid-container">

    <nav class="ext-docs-navigation-container">
        <ul class="ext-docs-navigation-menu">
            <li class="ext-docs-navigation-menu--item "><a href="#setup">Initial Setup</a></li>
            <li class="ext-docs-navigation-menu--item "><a href="#delete">Remove IMG From Cache</a></li>
            <li class="ext-docs-navigation-menu--item "><a href="#orientation">Image Orientation</a></li>
            <li class="ext-docs-navigation-menu--item "><a href="#crop">Cropping</a></li>
            <li class="ext-docs-navigation-menu--item "><a href="#size">Size</a></li>
            <li class="ext-docs-navigation-menu--item "><a href="#pixeldensity">Pixel Density</a></li>
            <li class="ext-docs-navigation-menu--item "><a href="#adjustments">Adjustments</a></li>
            <li class="ext-docs-navigation-menu--item "><a href="#effects">Effects</a></li>
            <li class="ext-docs-navigation-menu--item "><a href="#watermark">WaterMarks</a></li>
            <li class="ext-docs-navigation-menu--item "><a href="#bg">Background</a></li>
            <li class="ext-docs-navigation-menu--item "><a href="#border">Borders</a></li>
            <li class="ext-docs-navigation-menu--item "><a href="#encode">Change IMG Format</a></li>
            <li class="ext-docs-navigation-menu--item "><a href="#faq">FAQ's</a></li>
            <li class="ext-docs-navigation-menu--item "><a href="#trouble">Troubleshooting</a></li>
        </ul>
    </nav>
    <div class="ext-docs-content">
        <section id="setup">
            <h1 class="heading">Initial Setup</h1>
            <p>
                If you're using Nginx you'll need to add a location block to your sites nginx (sites-available) config
            </p>
            <pre class="language-nginx"><code># Generated thumbnail images from the betterthumbs extension
location ~* /img/(.*)$ {
  try_files $uri $uri/ /index.php?$query_string;
}</code></pre>

            <h2 class="subheading">Config Setup</h2>
            <p>
                There are four areas you can adjust once the extension is installed.
            </p>
            <div class="ext-docs-card">
                <ol>
                    <li>Image Driver</li>
                    <li>Security</li>
                    <li>Defaults</li>
                    <li>Presets</li>
                </ol>
            </div>
            <p>
                The only one you'll need to supply yourself if the secure sign key under security. You can create this key with Openssl or you can use Composer and require
                <a href="https://github.com/AndrewCarterUK/CryptoKey">CryptoKey</a> to generate a key.
            </p>

            <h3 class="subheading">Image Driver Options</h3>
            <p>
                By default this extension uses GD. This is the same driver used by Bolt Thumbnail handler. You can Also use ImageMagick. You'll need the imagick php extension for this to work. See
                <a href="http://php.net/manual/en/book.imagick.php">http://php.net/manual/en/book.imagick.php</a>
            </p>
            <pre class="language-yaml"><code>Image_Driver: 'gd'</code></pre>

            <h3 class="subheading">Responsive Images Polyfill</h3>
            <p>
                For browsers that don't support Responsive Images (<a href="http://caniuse.com/#feat=srcset">Browser support from caniuse.com</a>) you have an option to use a polyfill to give support to those browsers. The polyfill used is
                <a href="https://scottjehl.github.io/picturefill/">Picturefill</a>.
            </p>
            <p>
                This is off by default. Older browsers should use the image provided in the <code>src</code> attribute in the image. This will be the first image size in any of your modifications. To provide responsive images to unsupported browsers change this to true.
            </p>
            <pre class="language-yaml"><code>picturefill: true</code></pre>
            <p>
                This will give you in the head of your rendered HTML underneath all CSS files
            </p>
            <pre class="language-markup"><code>&lt;script src="extensions/vendor/cdowdy/betterthumbs/picturefill/3.02/picturefill.min.js" async defer&gt;&lt;/script&gt;</code></pre>

            <h3 class="subheading">Security</h3>
            <p>
                <strong>Sign Key:</strong> This prevents image flooding attacks (requesting a bunch of images, filling up storage) that could lock up your server or cause a denial of service. This is required. Without this key this extension will not generate any images. If a url is modified in the address bar or through curl and not initiated by your server then an Image will not be generated and a 403 HTTP response code will be sent.
            </p>
            <pre class="language-yaml"><code>security:
  secure_sign_key: 'really long sign key here'</code></pre>

            <p>
                <strong>Max Image Size</strong> limits how large images can be generated see: <a
                    href="http://glide.thephpleague.com/1.0/config/security/#max-image-size">http://glide.thephpleague.com/1.0/config/security/#max-image-size</a>
            </p>
            <pre class="language-yaml"><code>security:
  secure_sign_key: 'sign key here'
  max_image_size: 4000000</code></pre>

            <h3 class="subheading">Setting Defaults</h3>
            <p>
                Defaults are used for <strong>each and every image manipulation</strong> done - ie have a watermark on each image. The quality is set to 80 to mimic Bolt's thumbnail handler. You can change this to your preferred quality but be warned. A higher quality will make the image file size a lot bigger.
            </p>
            <pre class="language-yaml"><code># Current 'default' settings
defaults:
  q: 80

# Example that adds a watermark to each image produced.
defaults:
  q: 80
  mark: 'watermark.png'</code></pre>

            <h3 class="subheading">Setting Presets</h3>
            <p>
                Presets are like defaults but are only used when they are invoked in either a config section or through a template. These are also the 'fallback' settings that will be used if 'modifications' are left out of a named config block.
            </p>
            <p>
                This extension ships with a set of presets that are used as fall backs. You can name yours whatever you like and have any of the Glide modifications available used here.
            </p>
            <pre class="language-yaml"><code># Default Presets
presets:
  small:
    w: 175
    fit: stretch
  medium:
    w: 350
    fit: stretch
  large:
    w: 700
    fit: stretch
  xlarge:
    w: 1400
    fit: stretch</code></pre>

        </section><!-- /#setup -->

        <section id="delete">
            <h1 class="heading">Deleting Images From The Cache</h1>
            <p>
                A "nut" command is provided with this extension to delete all or a single image from the BetterThumbs cache. This command will remove all the associated images from the cache. If a single image is removed from the cache all of its related modifications are removed as well.
            </p>
            <p>
                To delete images from the cache open a terminal and use
            </p>
            <pre class="language-bash"><code>php app/nut betterthumbs:cacheClear all

# windows users with a broken symlink can use:
php vendor/bolt/bolt/app/nut betterthumbs:cacheClear all

# To remove a single Image
php app/nut betterthumbs:cacheClear filename.jpg

# windows users with a broken symlink can use:
php vendor/bolt/bolt/app/nut betterthumbs:cacheClear filename.jpg</code></pre>
        </section>
        <!-- /#delete -->

        <section id="orientation">
            <h1 class="heading">Image Orientation</h1>
            <p>
                You can rotate the image in the following directions:
            </p>
            <div class="ext-docs-card">
                <ul>
                    <li>Auto - uses Exif data to automatically orient images</li>
                    <li>90</li>
                    <li>180</li>
                    <li>270</li>
                </ul>
            </div>
            <details>
                <summary><strong>See Usage Examples</strong></summary>

            <!--<p><strong>Usage Examples</strong></p>-->
            <pre class="language-yaml"><code># Setting it as a default manipulation:
defaults:
  or: 90

# or as a preset:
presets:
  small:
    w: 175
    fit: stretch
    or: 90
  medium:
    w: 350
    fit: stretch
    or: 90
  large:
    w: 700
    fit: stretch
    or: 90
  xlarge:
    w: 1400
    fit: stretch
    or: 90

# In a named config block:
yourNamedConfig:
# other settings here
 modifications:
   small: &lbrace; 'w': 340, 'or' : 90 &rbrace;
   medium: &lbrace; 'w': 680, 'or' : 90  &rbrace;
   large: &lbrace; 'w': 800, 'or' : 90  &rbrace;
   xlarge: &lbrace; 'w' : 1000, 'or' : 90  &rbrace;</code></pre>
            <p><strong>As a Template Override</strong></p>
            <pre class="language-twig"><code>&lbrace;&lbrace; img(record.image, 'blogposts', &lbrace;
    'modifications': &lbrace;
        'small': &lbrace;'w': 400, 'filt':'sepia', 'or' : 90 &rbrace;,
        'medium': &lbrace; 'w': 600, 'h': 600, 'or' : 90 &rbrace;
    &rbrace; ,
&rbrace; ) &rbrace;&rbrace;</code></pre>
            </details>
            <!--<hr>-->
        </section> <!-- /#orientation -->

        <section id="crop">
            <h1 class="heading">Image Cropping</h1>
            <p>
                Image cropping can take four (4) different options. These all currently <strong>require a width and height</strong> to be used.
            </p>
            <h2 class="subheading">Fit Crop</h2>

            <p>
                Resize the Image to fill the width and height.
            </p>
            <details>
                <summary><strong>See Usage Examples</strong></summary>
                <p>In the Extensions Config</p>
                <pre class="language-yaml"><code>namedConfig:
# other settings:
  modifications:
    small:
      w: 200
      h: 200
      fit: 'crop'
    medium:
      w: 350
      h: 350
      fit: 'crop'
    large:
      w: 700
      h: 700
      fit: 'crop'
    xlarge:
      w: 1400
      h: 1400
      fit: 'crop'</code></pre>
                <p>In a twig template</p>
                <pre class="language-twig"><code>&lbrace;&lbrace; img(record.image, 'blogposts', &lbrace;
    'modifications': &lbrace;
        'small': &lbrace;'w': 400, 'h' 400', 'fit':'crop' &rbrace;,
        'medium': &lbrace;'w': 600, 'h' 600', 'fit':'crop' &rbrace;,
        'large': &lbrace;'w': 800, 'h' 800', 'fit':'crop' &rbrace;,
        'xlarge': &lbrace;'w': 100, 'h' 100', 'fit':'crop' &rbrace;
    &rbrace; ,
&rbrace; ) &rbrace;&rbrace;</code></pre>
            </details>
            <h2 class="subheading">Crop Position</h2>
            <p>Sets the crop position. Things like crop from the top left of an image. Available crop-position options are</p>
            <div class="ext-docs-card">
                <ul>
                    <li>crop-top-left</li>
                    <li>crop-top</li>
                    <li>crop-top-right</li>
                    <li>crop-left</li>
                    <li>crop-center - <strong>Default</strong></li>
                    <li>crop-right</li>
                    <li>crop-bottom-left</li>
                    <li>crop-bottom</li>
                    <li>crop-bottom-right</li>
                </ul>
            </div>
            <details>
                <summary><strong>See Usage Examples</strong></summary>
                <p>In the Extensions Config</p>
                <pre class="language-yaml"><code>namedConfig:
# other settings:
  modifications:
    small:
      w: 200
      h: 200
      fit: 'crop-bottom-right'
    medium:
      w: 350
      h: 350
      fit: 'crop-bottom-right'
    large:
      w: 700
      h: 700
      fit: 'crop-bottom-right'
    xlarge:
      w: 1400
      h: 1400
      fit: 'crop-bottom-right'</code></pre>
                <p>In a twig template</p>
                <pre class="language-twig"><code>&lbrace;&lbrace; img(record.image, 'blogposts', &lbrace;
    'modifications': &lbrace;
        'small': &lbrace;'w': 400, 'h' 400', 'fit':'crop-left' &rbrace;,
        'medium': &lbrace;'w': 600, 'h' 600', 'fit':'crop-left' &rbrace;,
        'large': &lbrace;'w': 800, 'h' 800', 'fit':'crop-left' &rbrace;,
        'xlarge': &lbrace;'w': 100, 'h' 100', 'fit':'crop-left' &rbrace;
    &rbrace; ,
&rbrace; ) &rbrace;&rbrace;</code></pre>
            </details>
            <h2 class="subheading">Crop Focal Point</h2>
            <p>
                Sets a crop focal point using two offset percentages
            </p>
            <details>
                <summary><strong>See Usage Examples</strong></summary>
                <p>In the Extensions Config</p>
                <pre class="language-yaml"><code>namedConfig:
# other settings:
  modifications:
    small:
      w: 200
      h: 200
      fit: 'crop-10-80'
    medium:
      w: 350
      h: 350
      fit: 'crop-10-80'
    large:
      w: 700
      h: 700
      fit: 'crop-10-80'
    xlarge:
      w: 1400
      h: 1400
      fit: 'crop-10-80'</code></pre>
                <p>In a twig template</p>
                <pre class="language-twig"><code>&lbrace;&lbrace; img(record.image, 'blogposts', &lbrace;
    'modifications': &lbrace;
        'small': &lbrace;'w': 400, 'h' 400', 'fit':'crop-25-65' &rbrace;,
        'medium': &lbrace;'w': 600, 'h' 600', 'fit':'crop-25-65' &rbrace;,
        'large': &lbrace;'w': 800, 'h' 800', 'fit':'crop-25-65' &rbrace;,
        'xlarge': &lbrace;'w': 100, 'h' 100', 'fit':'crop-25-65' &rbrace;
    &rbrace; ,
&rbrace; ) &rbrace;&rbrace;</code></pre>
            </details>
            <h2 class="subheading">Crop</h2>
            <p>Crops the image to a specific dimension</p>
            <details>
                <summary><strong>See Usage Examples</strong></summary>
                <p>In the Extensions Config</p>
                <pre class="language-yaml"><code>namedConfig:
# other settings:
  modifications:
    small:
      w: 200
      h: 200
      crop: '100,200,915,155'
    medium:
      w: 350
      h: 350
      crop: '100,200,915,155'
    large:
      w: 700
      h: 700
      crop: '100,200,915,155'
    xlarge:
      w: 1400
      h: 1400
      crop: '100,200,915,155'</code></pre>
            </details>

        </section><!-- /#crop -->

        <section id="size">
            <h1 class="heading">Size</h1>
            <p>
                Sizes the width and height of an image in pixels. Can also supply a fit type. A <strong>Width Is Required if using the 'w' width density descriptor</strong>. The options for fit are:
            </p>

            <div class="ext-docs-card">
                <ul>
                    <li>Contain
                        <ul>
                            <li><strong>Default</strong>. Resizes the image to fit within the width and height boundaries without cropping, distorting or altering the aspect ratio.</li>
                        </ul>
                    </li>
                    <li>Max
                        <ul>
                            <li>Resizes the image to fit within the width and height boundaries without cropping, distorting or altering the aspect ratio, and will also not increase the size of the image if it is smaller than the output size</li>
                        </ul>
                    </li>
                    <li>Fill
                        <ul>
                            <li> Resizes the image to fit within the width and height boundaries without cropping or distorting the image, and the remaining space is filled with the background color. The resulting image will match the constraining dimensions.</li>
                        </ul>
                    </li>
                    <li>Stretch
                        <ul>
                            <li>Stretches the image to fit the constraining dimensions exactly. The resulting image will fill the dimensions, and will not maintain the aspect ratio of the input image.</li>
                        </ul>
                    </li>
                    <li>Crop
                        <ul>
                            <li>Resizes the image to fill the width and height boundaries and crops any excess image data. The resulting image will match the width and height constraints without distorting the image. See crop for more information.</li>
                        </ul>
                    </li>
                </ul>
            </div>
            <details>
                <summary><strong>See Usage Examples</strong></summary>
                <p>In the Extensions Config</p>
                <pre class="language-yaml"><code>namedConfig:
# other settings:
  modifications:
    small:
      w: 200
      fit: 'stretch'
    medium:
      w: 350
      h: 350 # added a height
      fit: 'stretch'
    large:
      w: 700
      h: 700 # added a height
      fit: 'stretch'
    xlarge:
      w: 1400
      h: 1400
      fit: 'stretch'</code></pre>
                <p>In a twig template</p>
                <pre class="language-twig"><code>&lbrace;&lbrace; img(record.image, 'blogposts', &lbrace;
    'modifications': &lbrace;
        'small': &lbrace;'w': 400, 'h' 400', 'fit':'contain' &rbrace;,
        'medium': &lbrace;'w': 600, 'h' 600', 'fit':'fill' &rbrace;,
        'large': &lbrace;'w': 800, 'h' 800', 'fit':'max' &rbrace;,
        'xlarge': &lbrace;'w': 100, 'h' 100', 'fit':'crop' &rbrace;
    &rbrace; ,
&rbrace; ) &rbrace;&rbrace;</code></pre>
            </details>
        </section><!-- /#size -->

        <section id="pixeldensity">
            <h1 class="heading">Pixel Density</h1>
            <p>
                You can adjust the pixel density for the image. Values you can use are from one (1) to eight (8). The default density is 1. <strong>A width or a height is required</strong>.
            </p>
            <p>Usage Examples</p>
            <pre class="language-yaml"><code>namedConfig:
# other settings:
  modifications:
    small:
      w: 200
      dpr: '1'
    medium:
      w: 350
      dpr: '2'
    large:
      w: 700
      dpr: '3'
    xlarge:
      w: 1400
      dpr: 'stretch'</code></pre>
            <p>In a twig template</p>
            <pre class="language-twig"><code>&lbrace;&lbrace; img(record.image, 'namedConfig', &lbrace;
    'modifications': &lbrace;
         'small': &lbrace;'w': 400, 'h' 400', 'dpr':'1' &rbrace;,
         'medium': &lbrace;'w': 600, 'h' 600', 'dpr':'2' &rbrace;,
         'large': &lbrace;'w': 800, 'h' 800', 'dpr':'3' &rbrace;,
         'xlarge': &lbrace;'w': 100, 'h' 100', 'dpr':'3.5' &rbrace;
    &rbrace; ,
&rbrace; ) &rbrace;&rbrace;</code></pre>
        </section>
        <!-- /#pixeldensity -->

        <section id="adjustments">
            <h1 class="heading">Image Adjustments</h1>
            <p>
                You can adjust/correct four (4) areas of an image.
            </p>
            <ol>
                <li>Brightness</li>
                <li>Contrast</li>
                <li>Gamma Correction</li>
                <li>Sharpness</li>
            </ol>
            <h2 class="subheading">Adjusting Brightness</h2>
            <p>
                Values available to adjust bright range from <code>-100</code> to <code>100</code>. A value of <code>0</code> represents no change.
            </p>
            <p>
                The parameter needed to adjust brightness is <code class="language-yaml"> bri </code>.
            </p>
            <pre class="language-yaml"><code>namedConfig:
# other settings:
  modifications:
    small:
      bri: 80</code></pre>
            <p>In a twig template</p>
            <pre class="language-twig"><code>&lbrace;&lbrace; img(record.image, 'namedConfig', &lbrace;
    'modifications': &lbrace;
         'small': &lbrace;'w': 400, 'h' 400', 'bri':'25' &rbrace;
    &rbrace; ,
&rbrace; ) &rbrace;&rbrace;</code></pre>

            <h2 class="subheading">Adjusting Contrast</h2>
            <p>
                Values available to adjust contrast range from <code>-100</code> to <code>100</code>. A value of <code>0</code> represents no change.
            </p>
            <p>
                The parameter needed to adjust contrast is <code class="language-yaml"> con </code>.
            </p>

                     <pre class="language-yaml"><code>namedConfig:
# other settings:
  modifications:
    small:
      con: 80</code></pre>
            <p>In a twig template</p>
            <pre class="language-twig"><code>&lbrace;&lbrace; img(record.image, 'namedConfig', &lbrace;
    'modifications': &lbrace;
         'small': &lbrace;'w': 400, 'h' 400', 'con':'25' &rbrace;
    &rbrace; ,
&rbrace; ) &rbrace;&rbrace;</code></pre>

            <h2 class="subheading">Gamma Correction</h2>
            <p>
                Values available for gamma correction range from <code>0.1</code> to <code>9.99</code>.
            </p>
            <p>
                The parameter needed for gamma correction is <code class="language-yaml"> gam </code>.
            </p>
                    <pre class="language-yaml"><code>namedConfig:
# other settings:
  modifications:
    small:
      gam: 2.22</code></pre>
            <p>In a twig template</p>
            <pre class="language-twig"><code>&lbrace;&lbrace; img(record.image, 'namedConfig', &lbrace;
    'modifications': &lbrace;
         'small': &lbrace;'w': 400, 'h' 400', 'gam':'0.55' &rbrace;
    &rbrace; ,
&rbrace; ) &rbrace;&rbrace;</code></pre>

            <h2 class="subheading">Adjust Sharpness</h2>
            <p>
                Values available to adjust sharpness range from <code>0</code> to <code>100</code>.
            </p>
            <p>
                The parameter needed to adjust sharpness is <code class="language-yaml"> sharp </code>.
            </p>

                                <pre class="language-yaml"><code>namedConfig:
# other settings:
  modifications:
    small:
      sharp: 80</code></pre>
            <p>In a twig template</p>
            <pre class="language-twig"><code>&lbrace;&lbrace; img(record.image, 'namedConfig', &lbrace;
    'modifications': &lbrace;
         'small': &lbrace;'w': 400, 'h' 400', 'sharp':'2' &rbrace;
    &rbrace; ,
&rbrace; ) &rbrace;&rbrace;</code></pre>

        </section>
        <!-- /#adjustments -->

        <section id="effects">
            <h1 class="heading">Image Effects</h1>
            <div class="ext-docs-card">
                <p><strong>Coming Soon!</strong></p>
            </div>
        </section>
        <!-- /#effects -->

        <section id="watermark">
            <h1 class="heading">Watermarking an Image</h1>
            <p>
                To add a Watermark to your images you'll need to provide a watermark image file. Upload this file to the <code>Files</code> directory in your web root. Typically this would be in <code>public/files</code>
            </p>

            <p>
                We can adjust how this watermark looks and it's position in your image through Glide's watermark filters.
            </p>
            <div class="ext-docs-card">
                <ul>
                    <li>Watermark Width</li>
                    <li>Watermark Height</li>
                    <li>Watermark Fit</li>
                    <li>Watermark X-Offset</li>
                    <li>Watermark Y-Offset</li>
                    <li>Padding</li>
                    <li>Position</li>
                    <li>Alpha Transparency</li>
                </ul>
            </div>
            <h2 class="subheading">Using a Watermark</h2>
            <p>
                Once the image you wish to use as a watermark is uploaded to your files directory open up the extensions config and add in the <code>mark</code> key into any named config, defaults or presets you wish to use a watermark on.
            </p>
            <p></p>
            <p>
                In a named config block you'll need to supply the watermark config setting for each image you want watermarked.
            </p>
            <pre class="language-yaml"><code># Your Named Config Block
waterMarkedIMG:
  # other settings
  modifications:
    small:
      mark: 'myfancy-watermark-logo.png'
    medium:
      mark: 'myfancy-watermark-logo.png'
    large:
      mark: 'myfancy-watermark-logo.png'</code></pre>

            <p>In a template</p>
            <pre class="language-twig"><code>&lbrace;&lbrace; img(record.image, 'waterMarkedIMG', &lbrace;
  'modifications': &lbrace;
        'small': &lbrace;'mark': 'myfancy-watermark-logo.png' &rbrace;,
        'medium': &lbrace;'mark': 'myfancy-watermark-logo.png' &rbrace;,
        'large': &lbrace;'mark': 'myfancy-watermark-logo.png' &rbrace;,
    &rbrace; ,
&rbrace; ) &rbrace;&rbrace;</code></pre>
            <p>
                If every image you are going to use in your site will be watermarked you should set the watermark as a default as seen above in the Defaults section.
            </p>


            <h2 class="subheading">Controlling Watermark Width and Heights</h2>
            <p>
                To control the width and height of a watermark you'll need to set either <code>markw</code> or <code>markh</code> in defaults, presets or your named config block. You can use relative dimensions (percentages) for this. Since we are using responsive images you should use these dimensions.
            </p>
            <p>
                To use a relative dimension, simply provide a percentage as a number (between 0 and 100), followed by a w (width) or h (height). For example, 5w represents 5% of the width of the main image.
            </p>
            <pre class="language-yaml"><code># Your Named Config Block
waterMarkedIMG:
  # other settings
  modifications:
    small:
      mark: 'myfancy-watermark-logo.png'
      markw: '10w'
    medium:
      mark: 'myfancy-watermark-logo.png'
      markw: '10w'
    large:
      mark: 'myfancy-watermark-logo.png'
      markw: '10w'</code></pre>

            <p>In a template</p>
            <pre class="language-twig"><code>&lbrace;&lbrace; img(record.image, 'waterMarkedIMG', &lbrace;
  'modifications': &lbrace;
        'small': &lbrace;'mark': 'myfancy-watermark-logo.png', 'markw' : '10w' &rbrace;,
        'medium': &lbrace;'mark': 'myfancy-watermark-logo.png', 'markw' : '10w'  &rbrace;,
        'large': &lbrace;'mark': 'myfancy-watermark-logo.png', 'markw' : '10w'  &rbrace;,
    &rbrace; ,
&rbrace; ) &rbrace;&rbrace;</code></pre>

            <h2 class="subheading">Watermark Fit</h2>
            <p>
                Sets how the watermark is fitted to its target dimensions.
            </p>
            <p>
                Available options are:
            </p>
            <ul>
                <li><strong>contain</strong>: Default. Resizes the image to fit within the width and height boundaries without cropping,
                    distorting or altering the aspect ratio
                </li>
                <li><strong>max</strong>: Resizes the image to fit within the width and height boundaries without cropping, distorting or
                    altering the aspect ratio, and will also not increase the size of the image if it is smaller than
                    the output size.
                </li>
                <li><strong>fill</strong>: Resizes the image to fit within the width and height boundaries without cropping or distorting
                    the image, and the remaining space is filled with the background color. The resulting image will
                    match the constraining dimensions.
                </li>
                <li><strong>stretch</strong>: Stretches the image to fit the constraining dimensions exactly. The resulting image will
                    fill the dimensions, and will not maintain the aspect ratio of the input image.
                </li>
                <li><strong>crop</strong>: Resizes the image to fill the width and height boundaries and crops any excess image data. The resulting image will match the width and height constraints without distorting the image. See crop for more information.</li>
            </ul>

            <pre class="language-yaml"><code># Your Named Config Block
waterMarkedIMG:
  # other settings
  modifications:
    small:
      mark: 'myfancy-watermark-logo.png'
      markw: '10w'
      markfit: 'stretch'
    medium:
      mark: 'myfancy-watermark-logo.png'
      markw: '10w'
      markfit: 'stretch'
    large:
      mark: 'myfancy-watermark-logo.png'
      markw: '10w'
      markfit: 'stretch'</code></pre>

            <p>In a template</p>
            <pre class="language-twig"><code>&lbrace;&lbrace; img(record.image, 'waterMarkedIMG', &lbrace;
  'modifications': &lbrace;
        'small': &lbrace; 'markfit: 'stretch' &rbrace;,
        'medium': &lbrace; 'markfit: 'stretch'  &rbrace;,
        'large': &lbrace; 'markfit: 'stretch'  &rbrace;,
    &rbrace; ,
&rbrace; ) &rbrace;&rbrace;</code></pre>

            <h2 class="subheading">Watermark Offsets</h2>
            <p>
                This will set how far the watermark is from the left or right edges (markx) or the top of bottom (marky) of your image. You may set this in pixels or relative units (preferred). These will be ignored if markpos is set to center.
            </p>
            <pre class="language-yaml"><code># Your Named Config Block
waterMarkedIMG:
  # other settings
  modifications:
    small:
      mark: 'myfancy-watermark-logo.png'
      markx: '10w'
      marky: '10h'
    medium:
      mark: 'myfancy-watermark-logo.png'
      markx: '10w'
      marky: '10h'
    large:
      mark: 'myfancy-watermark-logo.png'
      markx: '10w'
      marky: '10h'</code></pre>

            <p>In a template</p>
            <pre class="language-twig"><code>&lbrace;&lbrace; img(record.image, 'waterMarkedIMG', &lbrace;
  'modifications': &lbrace;
        'small': &lbrace; 'marky: '10h' , 'markx' : '10w' &rbrace;,
        'medium': &lbrace; 'marky: '10h' , 'markx' : '10w'  &rbrace;,
        'large': &lbrace; 'marky: '10h', 'markx' : '10w'  &rbrace;,
    &rbrace; ,
&rbrace; ) &rbrace;&rbrace;</code></pre>

            <h2 class="subheading">Controlling Watermark Padding</h2>
            <p>
                Sets how far the watermark is away from edges of the image. A shortcut for using both markx and marky. Set in pixels, or using relative dimensions. Ignored if markpos is set to center.
            </p>

            <pre class="language-yaml"><code># Your Named Config Block
waterMarkedIMG:
  # other settings
  modifications:
    small:
      mark: 'myfancy-watermark-logo.png'
      markpad: '20'
    medium:
      mark: 'myfancy-watermark-logo.png'
      markpad: '20'
    large:
      mark: 'myfancy-watermark-logo.png'
      markpad: '20'</code></pre>

            <p>In a template</p>
            <pre class="language-twig"><code>&lbrace;&lbrace; img(record.image, 'waterMarkedIMG', &lbrace;
  'modifications': &lbrace;
        'small': &lbrace; 'markpad: '20' &rbrace;,
        'medium': &lbrace; 'markpad: '20'  &rbrace;,
        'large': &lbrace; 'markpad: '20'  &rbrace;,
    &rbrace; ,
&rbrace; ) &rbrace;&rbrace;</code></pre>

            <h2 class="subheading">Setting the Watermark Position</h2>
            <p>
                Sets where the watermark is positioned. Default is center.
            </p>
            <p>Available Options</p>
            <div class="ext-docs-card">
                <ul>
                    <li>top-left</li>
                    <li>top</li>
                    <li>top-right</li>
                    <li>left</li>
                    <li>center</li>
                    <li>right</li>
                    <li>bottom-left</li>
                    <li>bottom</li>
                    <li>bottom-right</li>
                </ul>
            </div>

            <pre class="language-yaml"><code># Your Named Config Block
waterMarkedIMG:
  # other settings
  modifications:
    small:
      mark: 'myfancy-watermark-logo.png'
      markpos: 'top-left'
    medium:
      mark: 'myfancy-watermark-logo.png'
      markpos: 'top-left'
    large:
      mark: 'myfancy-watermark-logo.png'
      markpos: 'top-left'</code></pre>

            <p>In a template</p>
            <pre class="language-twig"><code>&lbrace;&lbrace; img(record.image, 'waterMarkedIMG', &lbrace;
  'modifications': &lbrace;
        'small': &lbrace; 'markpos: 'top-left' &rbrace;,
        'medium': &lbrace; 'markpos: 'top-left'  &rbrace;,
        'large': &lbrace; 'markpos: 'top-left'  &rbrace;,
    &rbrace; ,
&rbrace; ) &rbrace;&rbrace;</code></pre>

            <h2 class="subheading">Setting Watermark Opacity</h2>
            <p>
                Sets the opacity of the watermark. Use values between 0 and 100, where 100 is fully opaque, and 0 is fully transparent. The default value is 100.
            </p>
            <pre class="language-yaml"><code># Your Named Config Block
waterMarkedIMG:
  # other settings
  modifications:
    small:
      mark: 'myfancy-watermark-logo.png'
      markalpha: 30
    medium:
      mark: 'myfancy-watermark-logo.png'
      markalpha: 30
    large:
      mark: 'myfancy-watermark-logo.png'
      markalpha: 30</code></pre>

            <p>In a template</p>
            <pre class="language-twig"><code>&lbrace;&lbrace; img(record.image, 'waterMarkedIMG', &lbrace;
  'modifications': &lbrace;
        'small': &lbrace; 'markalpha: 30 &rbrace;,
        'medium': &lbrace; 'markalpha: 30  &rbrace;,
        'large': &lbrace; 'markalpha: 30  &rbrace;,
    &rbrace; ,
&rbrace; ) &rbrace;&rbrace;</code></pre>
        </section>
        <!-- /#watermark -->

        <section id="bg">
        <h1 class="heading">Background</h1>
        <div class="ext-docs-card">
            <p><strong>Coming Soon!</strong></p>
        </div>
    </section>
        <!-- /#bg -->

        <section id="border">
            <h1 class="heading">Image Borders</h1>
            <div class="ext-docs-card">
                <p><strong>Coming Soon!</strong></p>
            </div>
        </section>
        <!-- /#border -->

        <section id="encode">
            <h1 class="heading">Changing The Image Format</h1>
            <p>
                You can 'encode' or change the image format that is delivered. The available options are
            </p>
            <div class="ext-docs-card">
                <ul>
                    <li>JPG (jpg)</li>
                    <li>Progressive Jpeg (pjpg)</li>
                    <li>Gif (gif)</li>
                    <li>PNG (png)</li>
                </ul>
            </div>

            <pre class="language-yaml"><code># Your Named Config Block
convertFormat:
  # other settings
  modifications:
    small:
      fm: 'png'
    medium:
      fm: 'png'
    large:
      fm: 'png'</code></pre>

            <p>In a template</p>
            <pre class="language-twig"><code>&lbrace;&lbrace; img(record.image, 'convertFormat', &lbrace;
  'modifications': &lbrace;
        'small': &lbrace; 'fm' : 'pjpg' &rbrace;,
        'medium': &lbrace; 'fm' : 'pjpg'  &rbrace;,
        'large': &lbrace; 'fm' : 'pjpg'  &rbrace;,
    &rbrace; ,
&rbrace; ) &rbrace;&rbrace;</code></pre>

        </section>
        <!-- /#encode -->

        <section id="faq">
            <h1 class="heading">Frequently Asked Questions</h1>
            <div class="ext-docs-card">
                <p><strong>Coming Soon!</strong></p>
            </div>
        </section>
        <!-- /#faq -->

        <section id="trouble">
            <h1 class="heading">Trouble Shooting</h1>
            <div class="ext-docs-card">
                <p><strong>Coming Soon!</strong></p>
            </div>
        </section>
        <!-- /#trouble -->

    </div>

</main>

<script src="/extensions/vendor/cdowdy/betterthumbs/js/prism.js"></script>
</body>
</html>